// Code generated by gogenkit. DO NOT EDIT.

package userapi

import (
	"time"
)

// User Represents a user in the system
type User struct {
	ID        int64      `json:"id"`         // Unique user identifier
	Email     string     `json:"email"`      // User email address
	FirstName string     `json:"first_name"` // User's first name
	LastName  string     `json:"last_name"`  // User's last name
	Status    UserStatus `json:"status"`     // Current user status
	CreatedAt time.Time  `json:"created_at"` // Account creation timestamp
}

// UserStatus Possible user status values
type UserStatus string

const (
	UserStatusActive    UserStatus = "active"
	UserStatusInactive  UserStatus = "inactive"
	UserStatusSuspended UserStatus = "suspended"
	UserStatusPending   UserStatus = "pending"
)

// ValidUserStatusValues returns all valid values for UserStatus
func ValidUserStatusValues() []UserStatus {
	return []UserStatus{
		UserStatusActive,
		UserStatusInactive,
		UserStatusSuspended,
		UserStatusPending,
	}
}

// IsValid returns true if the UserStatus value is valid
func (s UserStatus) IsValid() bool {
	switch s {
	case UserStatusActive:
		return true
	case UserStatusInactive:
		return true
	case UserStatusSuspended:
		return true
	case UserStatusPending:
		return true
	}
	return false
}

// String returns the string representation of UserStatus
func (s UserStatus) String() string {
	return string(s)
}

// CreateUserRequest Request payload for creating a new user
type CreateUserRequest struct {
	Email     string `json:"email"`      // User email address
	FirstName string `json:"first_name"` // User's first name
	LastName  string `json:"last_name"`  // User's last name
}

// UpdateUserRequest Request payload for updating user information
type UpdateUserRequest struct {
	FirstName *string     `json:"first_name,omitempty"` // User's first name
	LastName  *string     `json:"last_name,omitempty"`  // User's last name
	Status    *UserStatus `json:"status,omitempty"`     // User status
}
